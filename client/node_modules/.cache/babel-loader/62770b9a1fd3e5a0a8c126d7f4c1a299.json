{"ast":null,"code":"import _slicedToArray from \"D:\\\\CS-dapp\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"D:\\\\CS-dapp\\\\Client\\\\src\\\\dashComponents\\\\Tender.js\";\nimport React, { useState } from 'react';\nimport { PdfUpload } from 'react-ipfs-uploader';\nimport swal from 'sweetalert';\n\nconst Tender = props => {\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        pdfUrl = _useState2[0],\n        setPdfUrl = _useState2[1];\n\n  const _useState3 = useState(''),\n        _useState4 = _slicedToArray(_useState3, 2),\n        target = _useState4[0],\n        setTarget = _useState4[1];\n\n  const _useState5 = useState(''),\n        _useState6 = _slicedToArray(_useState5, 2),\n        min = _useState6[0],\n        setMin = _useState6[1];\n\n  const submitHandler = async () => {\n    alert('Are you sure to deploy your tender ?');\n    const targetinWEI = props.web3.utils.toWei(target);\n    const mininWEI = props.web3.utils.toWei(min);\n    await props.contract.methods.registerTender(targetinWEI, mininWEI, pdfUrl).send({\n      from: props.account\n    });\n    swal({\n      title: \"Good job!\",\n      text: \"successfuly created!\",\n      icon: \"success\",\n      button: \"Continue To Website\"\n    });\n    setMin(\" \");\n    setTarget(\" \");\n  };\n\n  return React.createElement(\"div\", {\n    className: \"ui container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, console.log(props.contract), React.createElement(\"h1\", {\n    id: \"dashboard-h1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, \"BLOCKCHAIN BASED CHARITY SYSTEM\"), React.createElement(\"div\", {\n    className: \"cheat-arrange\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    style: \"color: blue\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \"Tender Generation:\"), React.createElement(\"div\", {\n    className: \"tender_gen\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(\"form\", {\n    className: \"ui form\",\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"eight wide field\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \"Target (ETH) *\"), React.createElement(\"input\", {\n    type: \"number\",\n    name: \"Target\",\n    placeholder: \"Target\",\n    onChange: e => setTarget(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  })), React.createElement(\"div\", {\n    className: \"eight wide field\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"Minimum Contribution (ETH) *\"), React.createElement(\"input\", {\n    type: \"number\",\n    name: \"Minimum Contribution\",\n    placeholder: \"Minimum Contribution\",\n    onChange: e => setMin(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }))), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, React.createElement(\"b\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, \"Upload Your Protocol Pdf * \")), React.createElement(PdfUpload, {\n    setUrl: setPdfUrl,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    className: \"ui button blue\",\n    onClick: submitHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, \"Create Tender\"), console.log(\"account=\", props.account))));\n};\n\nexport default Tender;","map":{"version":3,"sources":["D:/CS-dapp/Client/src/dashComponents/Tender.js"],"names":["React","useState","PdfUpload","swal","Tender","props","pdfUrl","setPdfUrl","target","setTarget","min","setMin","submitHandler","alert","targetinWEI","web3","utils","toWei","mininWEI","contract","methods","registerTender","send","from","account","title","text","icon","button","console","log","e","value"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { PdfUpload } from 'react-ipfs-uploader';\nimport swal from 'sweetalert';\n\n\n\n\nconst Tender = (props) => {\n  const [pdfUrl, setPdfUrl] = useState('')\n  const [target, setTarget] = useState('')\n  const [min, setMin] = useState('')\n\n\n\n  const submitHandler = async () => {\n    alert('Are you sure to deploy your tender ?');\n    const targetinWEI = props.web3.utils.toWei(target);\n    const mininWEI = props.web3.utils.toWei(min);\n    await props.contract.methods.registerTender(targetinWEI, mininWEI, pdfUrl).send({ from: props.account })\n    swal({\n      title: \"Good job!\",\n      text: \"successfuly created!\",\n      icon: \"success\",\n      button: \"Continue To Website\",\n    });\n    setMin(\" \")\n    setTarget(\" \")\n\n\n  }\n  return (\n    <div className=\"ui container\">\n      {console.log(props.contract)}\n      <h1 id=\"dashboard-h1\">BLOCKCHAIN BASED CHARITY SYSTEM</h1>\n      <div className='cheat-arrange'>\n        <h1 style=\"color: blue\">Tender Generation:</h1>\n        <div className='tender_gen'>\n\n\n          <form className=\"ui form\" type='submit'>\n\n            <p></p>\n            <div className=\"eight wide field\">\n              <label>Target (ETH) *</label>\n              <input type=\"number\" name=\"Target\" placeholder=\"Target\" onChange={(e) => setTarget(e.target.value)}></input>\n            </div>\n            <div className=\"eight wide field\">\n              <label>Minimum Contribution (ETH) *</label>\n              <input type=\"number\" name=\"Minimum Contribution\" placeholder=\"Minimum Contribution\" onChange={(e) => setMin(e.target.value)}></input>\n            </div>\n          </form>\n          <p></p>\n          <p>\n            <b>Upload Your Protocol Pdf * </b>\n          </p>\n          <PdfUpload setUrl={setPdfUrl} />\n          <p></p>\n          <button className='ui button blue' onClick={submitHandler}>Create Tender</button>\n          {console.log(\"account=\", props.account)}\n        </div>\n      </div>\n    </div>\n  );\n}\nexport default Tender\n"]},"metadata":{},"sourceType":"module"}