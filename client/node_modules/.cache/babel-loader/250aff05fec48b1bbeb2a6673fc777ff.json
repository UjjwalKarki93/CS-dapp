{"ast":null,"code":"var _jsxFileName = \"D:\\\\CS-dapp\\\\Client\\\\src\\\\App.js\";\nimport React, { Component } from \"react\";\nimport bcs from \"./contracts/bcs.json\";\nimport AccountVerfication from \"./contracts/AccountVerification.json\";\nimport getWeb3 from \"./getWeb3\";\nimport Formate from './utils/Formate';\nimport 'semantic-ui-css/semantic.min.css';\nimport { Menu } from \"semantic-ui-react\";\nimport { BrowserRouter, Switch, Route, Link, Redirect } from 'react-router-dom';\nimport Home from './components/Home';\nimport SignUp from \"./components/SignUp\";\nimport SignIn from \"./components/SignIn\";\nimport Dashboard from \"./components/Dashboard\";\nimport \"./App.css\";\nimport swal from 'sweetalert';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      web3: null,\n      account: null,\n      contractA: null,\n      contractB: null,\n      caddress: null,\n      balance: null,\n      activeItem: 'home',\n      signedUp: false,\n      loggedIn: false,\n      username: ''\n    };\n\n    this.handleItemClick = (e, {\n      name\n    }) => this.setState({\n      activeItem: name,\n      color: 'red',\n      loggedIn: false\n    });\n\n    this.componentDidMount = async () => {\n      try {\n        // Get network provider and web3 instance.\n        const web3 = await getWeb3(); // Use web3 to get the user's accounts.\n\n        const accounts = await web3.eth.getAccounts();\n        window.ethereum.on('accountsChanged', function (accounts) {\n          swal(\"Detected Account Change\", \"You will be signed out...\");\n          window.location.reload(true);\n        }); // Get the AccountVerification contract instance.\n\n        const networkIdA = await web3.eth.net.getId();\n        const deployedNetworkA = AccountVerfication.networks[networkIdA];\n        const contract1 = new web3.eth.Contract(AccountVerfication.abi, deployedNetworkA && deployedNetworkA.address); // Get the BCS contract instance.\n\n        const networkIdB = await web3.eth.net.getId();\n        const deployedNetworkB = bcs.networks[networkIdB];\n        const contract2 = new web3.eth.Contract(bcs.abi, deployedNetworkB && deployedNetworkB.address);\n        const address = deployedNetworkB.address; // Set web3, accounts, and contract to the state, and then proceed with an\n        // example of interacting with the contract's methods.\n\n        this.setState({\n          web3,\n          account: accounts[0],\n          contractA: contract1,\n          contractB: contract2,\n          caddress: address\n        }, this.start);\n      } catch (error) {\n        // Catch any errors for any of the above operations.\n        alert(\"Failed to load web3, accounts, or contract. Check console for details.\");\n        console.error(error);\n      }\n    };\n\n    this.start = async () => {\n      const _this$state = this.state,\n            web3 = _this$state.web3,\n            account = _this$state.account,\n            contractA = _this$state.contractA,\n            contractB = _this$state.contractB,\n            caddress = _this$state.caddress;\n      console.log(\"web3 =\", web3);\n      console.log(\"ContractA =\", contractA);\n      console.log(\"ContractB =\", contractB);\n      console.log(\"Caddress =\", caddress);\n      console.log(\"Acoount =\", account);\n    };\n\n    this.getAccount = async () => {\n      if (this.state.web3 !== null || this.state.web3 !== undefined) {\n        await window.ethereum.on('accountsChanged', async accounts => {\n          this.setState({\n            account: accounts[0],\n            loggedIn: false\n          });\n          this.state.web3.eth.getBalance(accounts[0], (err, balance) => {\n            if (!err) {\n              this.setState({\n                balance: Formate(this.state.web3.utils.fromWei(balance, 'ether'))\n              });\n            }\n          });\n        });\n      }\n    };\n\n    this.accountCreated = async signedUp => {\n      this.setState({\n        signedUp\n      });\n    };\n\n    this.userSignedIn = async (loggedIn, username) => {\n      this.setState({\n        loggedIn,\n        username\n      });\n    };\n\n    this.loggedOut = async loggedIn => {\n      this.setState({\n        loggedIn\n      });\n    };\n  }\n\n  render() {\n    const _this$state2 = this.state,\n          activeItem = _this$state2.activeItem,\n          color = _this$state2.color;\n\n    if (!this.state.web3) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, \"Users are requested to get connected to METAMASK before using this dAPP.\"));\n    }\n\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"main-page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }, React.createElement(BrowserRouter, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"home-nav\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131\n      },\n      __self: this\n    }, React.createElement(Menu, {\n      stackable: true,\n      inverted: true,\n      secondary: true,\n      size: \"large\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(Menu.Item, {\n      name: \"home\",\n      position: \"left\",\n      color: color,\n      active: activeItem === 'home',\n      onClick: this.handleItemClick,\n      as: Link,\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }), !this.state.loggedIn ? React.createElement(Menu.Item, {\n      position: \"right\",\n      name: \"sign in\",\n      color: color,\n      active: activeItem === 'sign in',\n      onClick: this.handleItemClick,\n      as: Link,\n      to: \"/sign-in\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }) : console.log(''), this.state.loggedIn ? React.createElement(Menu.Item, {\n      name: \"sign out\",\n      color: \"red\",\n      active: activeItem === 'sign out',\n      onClick: this.handleItemClick,\n      as: Link,\n      to: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }) : React.createElement(Menu.Item, {\n      name: \"sign up\",\n      color: color,\n      active: activeItem === 'sign up',\n      onClick: this.handleItemClick,\n      as: Link,\n      to: \"/sign-up\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }))), React.createElement(Switch, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183\n      },\n      __self: this\n    }, React.createElement(Route, {\n      exact: true,\n      path: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184\n      },\n      __self: this\n    }, React.createElement(Home, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    })), React.createElement(Route, {\n      path: \"/sign-in\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189\n      },\n      __self: this\n    }, this.state.loggedIn ? React.createElement(Redirect, {\n      to: \"/dashboard\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 192\n      },\n      __self: this\n    }) : React.createElement(SignIn, {\n      web3: this.state.web3,\n      contract: this.state.contractA,\n      account: this.state.account,\n      signedUp: this.state.signedUp,\n      userSignedIn: this.userSignedIn,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194\n      },\n      __self: this\n    })), this.state.loggedIn ? React.createElement(Route, {\n      path: \"/dashboard\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209\n      },\n      __self: this\n    }, React.createElement(Dashboard, {\n      web3: this.state.web3,\n      contract: this.state.contractB,\n      caddress: this.state.caddress,\n      account: this.state.account,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 210\n      },\n      __self: this\n    })) : React.createElement(Route, {\n      path: \"/sign-up\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218\n      },\n      __self: this\n    }, React.createElement(SignUp, {\n      web3: this.state.web3,\n      contract: this.state.contractA,\n      account: this.state.account,\n      accountCreated: this.accountCreated,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 219\n      },\n      __self: this\n    })), this.state.loggedIn ? React.createElement(Route, {\n      path: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231\n      },\n      __self: this\n    }, React.createElement(Home, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 232\n      },\n      __self: this\n    })) : React.createElement(Route, {\n      path: \"/sign-up\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 235\n      },\n      __self: this\n    }, React.createElement(SignUp, {\n      web3: this.state.web3,\n      contract: this.state.contractA,\n      account: this.state.account,\n      accountCreated: this.accountCreated,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 236\n      },\n      __self: this\n    }))))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["D:/CS-dapp/Client/src/App.js"],"names":["React","Component","bcs","AccountVerfication","getWeb3","Formate","Menu","BrowserRouter","Switch","Route","Link","Redirect","Home","SignUp","SignIn","Dashboard","swal","App","state","web3","account","contractA","contractB","caddress","balance","activeItem","signedUp","loggedIn","username","handleItemClick","e","name","setState","color","componentDidMount","accounts","eth","getAccounts","window","ethereum","on","location","reload","networkIdA","net","getId","deployedNetworkA","networks","contract1","Contract","abi","address","networkIdB","deployedNetworkB","contract2","start","error","alert","console","log","getAccount","undefined","getBalance","err","utils","fromWei","accountCreated","userSignedIn","loggedOut","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport bcs from \"./contracts/bcs.json\";\nimport AccountVerfication from \"./contracts/AccountVerification.json\"\nimport getWeb3 from \"./getWeb3\";\nimport Formate from './utils/Formate';\nimport 'semantic-ui-css/semantic.min.css'\nimport { Menu } from \"semantic-ui-react\";\nimport { BrowserRouter, Switch, Route, Link, Redirect } from 'react-router-dom';\nimport Home from './components/Home';\nimport SignUp from \"./components/SignUp\";\nimport SignIn from \"./components/SignIn\"\nimport Dashboard from \"./components/Dashboard\";\nimport \"./App.css\";\nimport swal from 'sweetalert'\n\n\n\nclass App extends Component {\n  state = {\n    web3: null,\n    account: null,\n    contractA: null,\n    contractB: null,\n    caddress: null,\n    balance: null,\n    activeItem: 'home',\n    signedUp: false,\n    loggedIn: false,\n    username: ''\n  };\n  \n  handleItemClick = (e, { name }) => this.setState({ activeItem: name, color: 'red',loggedIn: false })\n  componentDidMount = async () => {\n    try {\n      // Get network provider and web3 instance.\n      const web3 = await getWeb3();\n\n      // Use web3 to get the user's accounts.\n      const accounts = await web3.eth.getAccounts();\n\n      window.ethereum.on('accountsChanged', function (accounts) {\n        swal(\"Detected Account Change\", \"You will be signed out...\");\n          window.location.reload(true)\n      })\n\n      // Get the AccountVerification contract instance.\n      const networkIdA = await web3.eth.net.getId();\n      const deployedNetworkA = AccountVerfication.networks[networkIdA];\n      const contract1 = new web3.eth.Contract(\n        AccountVerfication.abi,\n        deployedNetworkA && deployedNetworkA.address,\n      );\n\n\n\n      // Get the BCS contract instance.\n      const networkIdB = await web3.eth.net.getId();\n      const deployedNetworkB = bcs.networks[networkIdB];\n      const contract2 = new web3.eth.Contract(\n        bcs.abi,\n        deployedNetworkB && deployedNetworkB.address);\n      const address = deployedNetworkB.address;\n\n\n      // Set web3, accounts, and contract to the state, and then proceed with an\n      // example of interacting with the contract's methods.\n      this.setState({ web3, account: accounts[0], contractA: contract1, contractB: contract2, caddress: address }, this.start);\n    } catch (error) {\n      // Catch any errors for any of the above operations.\n      alert(\n        `Failed to load web3, accounts, or contract. Check console for details.`,\n      );\n      console.error(error);\n    }\n\n  };\n  start = async () => {\n\n    const { web3, account, contractA, contractB, caddress } = this.state;\n\n    console.log(\"web3 =\", web3);\n    console.log(\"ContractA =\", contractA);\n    console.log(\"ContractB =\", contractB);\n    console.log(\"Caddress =\", caddress);\n    console.log(\"Acoount =\", account);\n  };\n\n\n  getAccount = async () => {\n    if (this.state.web3 !== null || this.state.web3 !== undefined) {\n      await window.ethereum.on('accountsChanged', async (accounts) => {\n        this.setState({\n          account: accounts[0],\n          loggedIn: false\n        });\n\n        this.state.web3.eth.getBalance(accounts[0], (err, balance) => {\n          if (!err) {\n            this.setState({ balance: Formate(this.state.web3.utils.fromWei(balance, 'ether')) });\n          }\n        });\n      });\n    }\n  }\n\n  accountCreated = async (signedUp) => {\n    this.setState({ signedUp });\n  }\n\n  userSignedIn = async (loggedIn, username) => {\n    this.setState({ loggedIn, username });\n  }\n\n  loggedOut = async (loggedIn) => {\n    this.setState({ loggedIn });\n  }\n\n\n  render() {\n    const { activeItem, color } = this.state;\n    if (!this.state.web3) {\n      return <div>\n        <h3>Users are requested to get connected to METAMASK before using this dAPP.</h3>\n      </div>\n    }\n    \n    return (\n      <div className=\"App\">\n        <div className=\"main-page\">\n          <BrowserRouter>\n            <div className=\"home-nav\">\n              <Menu stackable inverted secondary size='large'>\n                <Menu.Item\n                  name='home'\n                  position='left'\n                  color={color}\n                  active={activeItem === 'home'}\n                  onClick={this.handleItemClick}\n                  as={Link}\n                  to='/'\n                />\n\n\n                {\n                  !this.state.loggedIn ?\n                    <Menu.Item\n                      position='right'\n                      name='sign in'\n                      color={color}\n                      active={activeItem === 'sign in'}\n                      onClick={this.handleItemClick}\n                      as={Link}\n                      to='/sign-in'\n                    />\n                    :\n                    console.log('')\n                }\n\n                {\n                  this.state.loggedIn ?\n                    <Menu.Item\n                      name='sign out'\n                      color='red'\n                      active={activeItem === 'sign out'}\n                      onClick={this.handleItemClick}\n                      as={Link}\n                      to='/'\n                    />\n                    :\n                    <Menu.Item\n                      name='sign up'\n                      color={color}\n                      active={activeItem === 'sign up'}\n                      onClick={this.handleItemClick}\n                      as={Link}\n                      to='/sign-up'\n                    />\n                }\n              </Menu>\n            </div>\n\n\n            <Switch>\n              <Route exact path='/' >\n                <Home />\n              </Route>\n\n              {\n                <Route path='/sign-in' >\n                  {\n                    this.state.loggedIn ?\n                      <Redirect to='/dashboard' />\n                      :\n                      <SignIn\n                        web3={this.state.web3}\n                        contract={this.state.contractA}\n                        account={this.state.account}\n                        signedUp={this.state.signedUp}\n                        userSignedIn={this.userSignedIn}\n                      />\n\n                  }\n                </Route>\n              }\n\n\n              {\n                this.state.loggedIn ?\n                  <Route path='/dashboard' >\n                    <Dashboard\n                      web3={this.state.web3}\n                      contract={this.state.contractB}\n                      caddress={this.state.caddress}\n                      account={this.state.account}\n                    />\n                  </Route>\n                  :\n                  <Route path='/sign-up' >\n                    <SignUp\n                      web3={this.state.web3}\n                      contract={this.state.contractA}\n                      account={this.state.account}\n                      accountCreated={this.accountCreated}\n                    />\n\n                  </Route>\n              }\n\n              {\n                this.state.loggedIn ?\n                  <Route path='/'>\n               <Home />\n                  </Route>\n                  :\n                  <Route path='/sign-up' >\n                    <SignUp\n                      web3={this.state.web3}\n                      contract={this.state.contractA}\n                      account={this.state.account}\n                      accountCreated={this.accountCreated}\n                    />\n                  </Route>\n              }\n            </Switch>\n          </BrowserRouter>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}