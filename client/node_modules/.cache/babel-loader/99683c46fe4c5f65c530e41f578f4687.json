{"ast":null,"code":"var _jsxFileName = \"D:\\\\CS-dapp\\\\client\\\\src\\\\components\\\\SignUp.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Form, Button, Card, Message } from 'semantic-ui-react';\nimport AuthenticationHash from '../utils/AuthenticationHash';\nimport \"../App.css\";\nimport 'secp256k1';\n\nclass SignUp extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      username: '',\n      password: '',\n      digicode: '',\n      alertMessage: '',\n      status: '',\n      signedUp: false\n    };\n\n    this.onSignUp = async () => {\n      //this.setState({ signedUp: false });\n      if (this.state.username !== '' && this.state.password !== '' && this.state.digicode !== '') {\n        let username = this.state.username.trim();\n        let password = this.state.password.trim();\n        let digicode = this.state.digicode.trim(); //===\n\n        if (password.length < 8) {\n          this.setState({\n            alertMessage: \"at least 8 characters for password\",\n            status: 'failed',\n            password: '',\n            digicode: ''\n          });\n          return;\n        } else {}\n\n        if (digicode.length !== 6) {\n          this.setState({\n            alertMessage: \"6 digit required for digicode\",\n            status: 'failed',\n            digicode: ''\n          });\n          return;\n        } else {\n          let userAddress = await this.props.contract.methods.getUserAddress().call({\n            from: this.props.account\n          });\n\n          if (userAddress !== '0x0000000000000000000000000000000000000000') {\n            this.setState({\n              alertMessage: 'this account already exists',\n              status: 'failed',\n              username: '',\n              password: '',\n              digicode: ''\n            });\n            return;\n          } else {\n            let hash = await AuthenticationHash(username, this.props.account, password, digicode, this.props.web3);\n            await this.props.contract.methods.register(hash).send({\n              from: this.props.account\n            });\n            this.setState({\n              username: '',\n              password: '',\n              digicode: '',\n              status: 'success',\n              alertMessage: \"Signup successful\",\n              signedUp: true\n            });\n            this.props.accountCreated(this.state.signedUp);\n            return;\n          }\n        }\n      }\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"sign-up\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      id: \"home-h1\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"BLOCKCHAIN BASED CHARITY SYSTEM\"), React.createElement(\"h3\", {\n      id: \"home-h3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, \"A decentralised form of donation\"), React.createElement(\"div\", {\n      className: \"title-signin\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, \"Create an Account\", React.createElement(\"div\", {\n      className: \"signup-form\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(Card, {\n      fluid: true,\n      centered: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(Card.Content, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(Form, {\n      size: \"large\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, this.state.alertMessage !== '' && this.state.status === 'failed' ? React.createElement(Message, {\n      negative: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, this.state.alertMessage) : this.state.alertMessage !== '' && this.state.status === 'success' ? React.createElement(Message, {\n      positive: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, this.state.alertMessage) : console.log(''), React.createElement(Form.Field, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      required: true,\n      type: \"text\",\n      placeholder: \"username\",\n      value: this.state.username,\n      onChange: e => this.setState({\n        username: e.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    })), React.createElement(Form.Field, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      required: true,\n      type: \"password\",\n      placeholder: \"password\",\n      value: this.state.password,\n      onChange: e => this.setState({\n        password: e.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    })), React.createElement(Form.Field, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      required: true,\n      type: \"text\",\n      placeholder: \"6 digit code\",\n      value: this.state.digicode,\n      autoComplete: \"digicode\",\n      onChange: e => this.setState({\n        digicode: e.target.value\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 123\n      },\n      __self: this\n    })), React.createElement(Form.Field, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(Button, {\n      type: \"submit\",\n      primary: true,\n      fluid: true,\n      size: \"large\",\n      onClick: this.onSignUp,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, \"Create account\"))))), React.createElement(\"div\", {\n      className: \"signin-onUp\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    }, \"Already have an account? \", React.createElement(Link, {\n      to: \"/sign-in\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, \"Sign in\")))));\n  }\n\n}\n\nexport default SignUp;","map":{"version":3,"sources":["D:/CS-dapp/client/src/components/SignUp.js"],"names":["React","Component","Link","Form","Button","Card","Message","AuthenticationHash","SignUp","state","username","password","digicode","alertMessage","status","signedUp","onSignUp","trim","length","setState","userAddress","props","contract","methods","getUserAddress","call","from","account","hash","web3","register","send","accountCreated","render","console","log","e","target","value"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Form, Button, Card, Message } from 'semantic-ui-react';\nimport AuthenticationHash from '../utils/AuthenticationHash';\nimport \"../App.css\";\nimport 'secp256k1'\n\nclass SignUp extends Component {\n    state = {\n        username: '',\n        password: '',\n        digicode: '',\n        alertMessage: '',\n        status: '',\n        signedUp: false\n    }\n\n    onSignUp = async () => {\n        //this.setState({ signedUp: false });\n\n        if (this.state.username !== '' && this.state.password !== '' && this.state.digicode !== '') {\n            let username = this.state.username.trim();\n            let password = this.state.password.trim();\n            let digicode = this.state.digicode.trim();\n\n            //===\n            if (password.length < 8) {\n                this.setState({\n                    alertMessage: \"at least 8 characters for password\",\n                    status: 'failed',\n                    password: '',\n                    digicode: '',\n                });\n                return;\n            } else {\n\n            } if (digicode.length !== 6) {\n                this.setState({\n                    alertMessage: \"6 digit required for digicode\",\n                    status: 'failed',\n                    digicode: ''\n                });\n                return\n            } else {\n                let userAddress = await this.props.contract.methods.getUserAddress()\n                    .call({ from: this.props.account });\n\n                if (userAddress !== '0x0000000000000000000000000000000000000000') {\n                    this.setState({\n                        alertMessage: 'this account already exists',\n                        status: 'failed',\n                        username: '',\n                        password: '',\n                        digicode: '',\n                    });\n\n                    return;\n                } else {\n                    let hash = await AuthenticationHash(username, this.props.account, password, digicode, this.props.web3);\n\n                    await this.props.contract.methods.register(hash).send({ from: this.props.account });\n\n                    this.setState({\n                        username: '',\n                        password: '',\n                        digicode: '',\n                        status: 'success',\n                        alertMessage: \"Signup successful\",\n                        signedUp: true\n                    });\n\n                    this.props.accountCreated(this.state.signedUp);\n                    return;\n                }\n            }\n        }\n\n    }\n\n    render() {\n        return (\n            <div className=\"sign-up\">\n                \n                    <h1 id=\"home-h1\">BLOCKCHAIN BASED CHARITY SYSTEM</h1>\n                    <h3 id='home-h3'>A decentralised form of donation</h3>\n                    <div className='title-signin'>\n                Create an Account\n                <div className='signup-form'>\n                    <Card fluid centered>\n                        <Card.Content>\n                            <Form size='large'>\n                                {\n                                    this.state.alertMessage !== '' && this.state.status === 'failed' ?\n                                        <Message negative>\n                                            {this.state.alertMessage}\n                                        </Message> :\n                                        this.state.alertMessage !== '' && this.state.status === 'success' ?\n                                            <Message positive>\n                                                {this.state.alertMessage}\n                                            </Message> :\n                                            console.log('')\n                                }\n                                <Form.Field>\n                                    <input\n                                        required\n                                        type='text'\n                                        placeholder='username'\n                                        value={this.state.username}\n                                        onChange={e => this.setState({ username: e.target.value })}\n                                    />\n                                </Form.Field>\n                                <Form.Field>\n                                    <input\n                                        required\n                                        type='password'\n                                        placeholder='password'\n                                        value={this.state.password}\n\n                                        onChange={e => this.setState({ password: e.target.value })}\n                                    />\n                                </Form.Field>\n                                <Form.Field>\n                                    <input\n                                        required\n                                        type='text'\n                                        placeholder='6 digit code'\n                                        value={this.state.digicode}\n                                        autoComplete=\"digicode\"\n                                        onChange={e => this.setState({ digicode: e.target.value })}\n                                    />\n                                </Form.Field>\n                                <Form.Field>\n                                    <Button type='submit' primary fluid size='large' onClick={this.onSignUp}>\n                                        Create account\n                                    </Button>\n                                </Form.Field>\n                            </Form>\n                        </Card.Content>\n                    </Card>\n                    <div className=\"signin-onUp\">\n                        Already have an account? <Link to='/sign-in'>Sign in</Link>\n                    </div>\n                </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default SignUp\n"]},"metadata":{},"sourceType":"module"}