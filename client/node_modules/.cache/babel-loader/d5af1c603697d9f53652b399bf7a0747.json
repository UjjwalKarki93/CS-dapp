{"ast":null,"code":"import _slicedToArray from \"D:\\\\CS-dapp\\\\client\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"D:\\\\CS-dapp\\\\client\\\\src\\\\dashComponents\\\\TenderLogs.js\";\nimport React, { useState } from 'react';\nimport { Card, Icon, Divider } from 'semantic-ui-react';\nimport { NavLink, BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport TenderStatus from '../components/TenderStatus';\nimport '../App.css';\nexport default function TenderLogs(props) {\n  const _useState = useState(''),\n        _useState2 = _slicedToArray(_useState, 2),\n        dvalue = _useState2[0],\n        setdValue = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        refreshb = _useState4[0],\n        setRef = _useState4[1];\n\n  const clickRefresh = () => {\n    setRef(!refreshb);\n  };\n\n  const clickHandler = async () => {\n    await props.contract.methods.donate().send({\n      from: props.account,\n      value: props.web3.utils.toWei(dvalue, 'ether')\n    });\n  };\n\n  console.log(\"account=\", props.account);\n  return React.createElement(\"div\", {\n    className: \"ui container center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    id: \"dashboard-h1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, \"BLOCKCHAIN BASED CHARITY SYSTEM\"), React.createElement(\"div\", {\n    className: \"cheat-arrange\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, \"TENDER\"), React.createElement(\"div\", {\n    className: \"tender_box\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, React.createElement(Router, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(Card.Content, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(Card.Header, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, props.address), React.createElement(Card.Meta, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \"Deployed Tender Address\"), React.createElement(\"nav\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(Card.Description, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(NavLink, {\n    to: \"/tenderlog/tenderstatus\",\n    classNmae: \"text-blue\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \"View Details\")), React.createElement(Divider, {\n    section: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }), React.createElement(\"label\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, \"Amount\", React.createElement(\"input\", {\n    type: \"number\",\n    placeholder: \" Amount(in ETH)\",\n    onChange: e => setdValue(e.target.value),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    className: \"ui button green\",\n    onClick: clickHandler,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, \"Donate\")))), React.createElement(\"button\", {\n    className: \"ui button blue\",\n    onClick: clickRefresh,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(Icon, {\n    name: \"sync\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }), \"Refresh\")), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }), React.createElement(Switch, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, React.createElement(Route, {\n    exact: true,\n    path: \"/tenderlog/tenderstatus\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, React.createElement(TenderStatus, {\n    contract: props.contract,\n    account: props.account,\n    web3: props.web3,\n    refresh: refreshb,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  })))))));\n}","map":{"version":3,"sources":["D:/CS-dapp/client/src/dashComponents/TenderLogs.js"],"names":["React","useState","Card","Icon","Divider","NavLink","BrowserRouter","Router","Route","Switch","TenderStatus","TenderLogs","props","dvalue","setdValue","refreshb","setRef","clickRefresh","clickHandler","contract","methods","donate","send","from","account","value","web3","utils","toWei","console","log","address","e","target"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport { Card, Icon, Divider } from 'semantic-ui-react'\nimport { NavLink, BrowserRouter as Router, Route, Switch } from 'react-router-dom'\nimport TenderStatus from '../components/TenderStatus'\nimport '../App.css';\n\nexport default function TenderLogs(props) {\n\n  const [dvalue, setdValue] = useState('')\n  const [refreshb, setRef] = useState(false)\n\n  const clickRefresh = () => {\n    setRef(!refreshb)\n  }\n\n\n  const clickHandler = async () => {\n    await props.contract.methods.donate().send(\n      { from: props.account, value: props.web3.utils.toWei(dvalue, 'ether') })\n  }\n\n  console.log(\"account=\", props.account)\n  return (\n    <div className='ui container center'>\n      <h1 id=\"dashboard-h1\">BLOCKCHAIN BASED CHARITY SYSTEM</h1>\n      <div className='cheat-arrange'>\n        <h1>TENDER</h1>\n        <div className='tender_box'>\n          <Router>\n            <Card>\n              <Card.Content>\n                <Card.Header>{props.address}</Card.Header>\n                <Card.Meta>Deployed Tender Address</Card.Meta>\n                <nav>\n                  <Card.Description>\n                    <NavLink to=\"/tenderlog/tenderstatus\" classNmae=\"text-blue\" >View Details</NavLink>\n                  </Card.Description>\n                  <Divider section></Divider>\n                  <label>Amount\n                    <input type=\"number\" placeholder=' Amount(in ETH)' onChange={(e) => setdValue(e.target.value)}></input>\n                    <p></p>\n                    <button className='ui button green' onClick={clickHandler}\n                    >Donate</button>\n                  </label>\n\n\n                </nav>\n\n              </Card.Content>\n\n\n\n\n              <button className='ui button blue' onClick={clickRefresh}><Icon name='sync' />Refresh</button>\n            </Card>\n\n            <br /><br />\n\n            <Switch>\n              <Route exact path=\"/tenderlog/tenderstatus\">\n                <TenderStatus\n\n                  contract={props.contract}\n                  account={props.account}\n                  web3={props.web3}\n                  refresh={refreshb} />\n\n              </Route>\n            </Switch>\n          </Router>\n        </div>\n      </div>\n    </div>\n  )\n}"]},"metadata":{},"sourceType":"module"}